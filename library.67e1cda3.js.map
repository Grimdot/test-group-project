{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,kFAWMC,EAAc,IAAI,E,WAAAC,SAElBC,EAAsB,iEA4BtBC,EAAe,YACnB,EAAAC,EAAAC,gBACA,IAAMC,EAAMC,KAAKC,MAAMC,aAAaC,QAAQ,iBAC5C,IAAKJ,EAGH,OAFAR,EAAAa,KAAKC,QAAQC,mBAAmB,aAAcX,QAC9C,EAAAE,EAAAU,eAIFC,QAAQC,IAAIhB,EAAYiB,kBAAkBX,IAAMY,MAAK,SAAAC,IACnD,EAAAC,EAAAC,eAAcF,IACd,EAAAf,EAAAU,c,KAIEQ,EAAa,YACjB,EAAAC,EAAAC,eAAcN,MAAK,SAAAC,GACjBM,QAAQC,IAAIP,E,KAEd,EAAAf,EAAAC,gBACA,IAAMC,EAAMC,KAAKC,MAAMC,aAAaC,QAAQ,eAC5C,IAAKJ,EAGH,OAFAR,EAAAa,KAAKC,QAAQC,mBAAmB,aAAcX,QAC9C,EAAAE,EAAAU,eAIFC,QAAQC,IAAIhB,EAAYiB,kBAAkBX,IAAMY,MAAK,SAAAC,IACnD,EAAAC,EAAAC,eAAcF,IACd,EAAAf,EAAAU,c,KAIJQ,IAEAxB,EAAAa,KAAKC,QAAQe,iBAAiB,SAhDH,SAAAC,GACzB,IAAMC,EAASD,EAAEE,OAAOC,WAAWC,QAAQC,GAEtCJ,GAIL7B,EAAYkC,cAAcL,GAAQX,MAAK,SAAAC,GACrCgB,EAAAC,MAAMC,KAAKF,EAAAG,iBACX,EAAAH,EAAAI,aAAYpB,EAAEqB,K,OAwClB1C,EAAAa,KAAK8B,WAAWd,iBAAiB,SA7DP,SAAAC,GACnBA,EAAEE,OAAOE,UAGgB,eAA1BJ,EAAEE,OAAOE,QAAQU,MACnBvC,IAE4B,aAA1ByB,EAAEE,OAAOE,QAAQU,MACnBpB,I,KAuDJ,EAAAC,EAAAoB,UAEA,EAAApB,EAAAqB,c","sources":["src/js/library.js"],"sourcesContent":["import { refs } from './refs';\nimport { spinnerStart, spinnerStop } from './spinner';\nimport { lybraryRender } from './render';\nimport { modal, renderModal, afterModalShow } from './modal';\nimport Notiflix from 'notiflix';\n\nimport { getUserData, greet, MakeAuthBtn } from './firebase';\nimport { getAuth } from 'firebase/auth';\n\nimport moviesAPI from './moviesAPI';\n\nconst filmService = new moviesAPI();\n\nconst emptyStorageMarkup = `<p class = 'storage-error'>This storage is empty... Yet :)</p>`;\nlet uid = null;\n\nconst onHeaderBtnsClick = e => {\n  if (!e.target.dataset) {\n    return;\n  }\n  if (e.target.dataset.type === 'watchedBtn') {\n    watchedFetch();\n  }\n  if (e.target.dataset.type === 'queueBtn') {\n    queueFetch();\n  }\n};\n\nconst handleGalleryClick = e => {\n  const filmId = e.target.parentNode.dataset.id;\n\n  if (!filmId) {\n    return;\n  }\n\n  filmService.fetchFilmById(filmId).then(r => {\n    modal.show(afterModalShow);\n    renderModal(r.data);\n  });\n};\n\nconst watchedFetch = () => {\n  spinnerStart();\n  const ids = JSON.parse(localStorage.getItem('watched-list'));\n  if (!ids) {\n    refs.gallery.insertAdjacentHTML('afterbegin', emptyStorageMarkup);\n    spinnerStop();\n    return;\n  }\n\n  Promise.all(filmService.fetcByMultipleIds(ids)).then(r => {\n    lybraryRender(r);\n    spinnerStop();\n  });\n};\n\nconst queueFetch = () => {\n  getUserData().then(r => {\n    console.log(r);\n  });\n  spinnerStart();\n  const ids = JSON.parse(localStorage.getItem('queue-list'));\n  if (!ids) {\n    refs.gallery.insertAdjacentHTML('afterbegin', emptyStorageMarkup);\n    spinnerStop();\n    return;\n  }\n\n  Promise.all(filmService.fetcByMultipleIds(ids)).then(r => {\n    lybraryRender(r);\n    spinnerStop();\n  });\n};\n\nqueueFetch();\n\nrefs.gallery.addEventListener('click', handleGalleryClick);\nrefs.headerBtns.addEventListener('click', onHeaderBtnsClick);\n\ngreet();\n\nMakeAuthBtn();\n"],"names":["$4Nugj","parcelRequire","$93effc6fc56091ad$var$filmService","default","$93effc6fc56091ad$var$emptyStorageMarkup","$93effc6fc56091ad$var$watchedFetch","$j1lrD","spinnerStart","ids","JSON","parse","localStorage","getItem","refs","gallery","insertAdjacentHTML","spinnerStop","Promise","all","fetcByMultipleIds","then","r","$lF0Zg","lybraryRender","$93effc6fc56091ad$var$queueFetch","$iNWLi","getUserData","console","log","addEventListener","e","filmId","target","parentNode","dataset","id","fetchFilmById","$5xtVg","modal","show","afterModalShow","renderModal","data","headerBtns","type","greet","MakeAuthBtn"],"version":3,"file":"library.67e1cda3.js.map"}